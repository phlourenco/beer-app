//
//  BeerListViewController.swift
//  uol-beer-app
//
//  Created by Paulo Lourenço on 11/04/19.
//  Copyright (c) 2019 Paulo Lourenço. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BeerListDisplayLogic: class, BaseDisplayLogic {
    func displayBeers()
}

class BeerListViewController: UIViewController {
    
    // MARK: Clean Swift
    
    var interactor: BeerListBusinessLogic?
    var router: (NSObjectProtocol & BeerListRoutingLogic & BeerListDataPassing)?
    
    // MARK: IBOutlets
    
    @IBOutlet weak var collectionView: UICollectionView!
    
    // MARK: Properties
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = BeerListInteractor()
        let presenter = BeerListPresenter()
        let router = BeerListRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        setupNavigationBar()
        setupCollectionView()
        
        interactor?.getBeerList(next: false)
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
    }
    
    private func setupNavigationBar() {
        definesPresentationContext = true
    }
    
    private func setupCollectionView() {
        collectionView.delegate = self
        collectionView.dataSource = self
        collectionView.register(UINib(nibName: "BeerCell", bundle: nil), forCellWithReuseIdentifier: "BeerCell")
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.handleRoute(segue: segue)
    }
    
}

extension BeerListViewController: BeerListDisplayLogic  {
    
    func displayBeers() {
        collectionView.reloadData()
    }
    
}
